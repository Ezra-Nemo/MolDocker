(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"9Wq+":function(e,t,o){"use strict";(function(e){o.d(t,"a",(function(){return d}));var i=o("kXk/"),r=o("hlD6"),s=o.n(r),a=o("PzdQ");let n={onQueueDelivery(e){alert("onQueueDelivery: "+JSON.stringify(e));let t=Object(a.e)("filename",e.pdb.mol.toText(),"dirname");Promise.all([t]).then(()=>{this.triggerCatcher=!this.triggerCatcher}),this.$store.commit("setVar",{name:"pdbContents",val:e.pdb.mol.frameToText(0)})},onMolLoadError(e){this.$store.commit("openModal",{title:e.title,body:e.body})},onFileReady(e){this.currentPdbContents=e,this.$store.commit("setVar",{name:"pdbContents",val:e.mol.frameToText(0)}),this.$store.commit("updateFileName",{type:"pdb",filename:e.filename}),this.$store.commit("setValidationParam",{name:"pdb",val:!0})},onStartConvertFile(e){alert("convert: "+e.filename),setTimeout(()=>{e.onConvertDone({filename:e.filename+".pdb",mol:e.mol})},2e3)},beforeQueueNextItem:()=>(alert("About to trigger..."),Promise.resolve()),useExampleFpocketInputFiles(){this.showFileInputs=!1,setTimeout(()=>{fetch("5j2v.pdb").then(e=>e.text()).then(e=>{this.$store.commit("setVar",{name:"pdbContents",val:e}),this.$store.commit("setValidationParam",{name:"pdb",val:!0}),this.$store.commit("updateFileName",{type:"pdb",filename:"pdb_example.pdb"})})},100)},onSubmitClick(){!0===this.validate()&&(this.$store.commit("disableTabs",{parametersTabDisabled:!0,existingFpocketOutputTabDisabled:!0,runningTabDisabled:!1}),e("body").addClass("waiting"),Vue.nextTick(()=>{this.$store.commit("setVar",{name:"tabIdx",val:2}),Vue.nextTick(()=>{this.$store.commit("setVar",{name:"time",val:(new Date).getTime()}),FpocketWeb.start(this.$store.state.fpocketParams,this.$store.state.pdbContents,(e,t,o,i)=>{this.$store.commit("setVar",{name:"time",val:Math.round(((new Date).getTime()-this.$store.state.time)/100)/10}),this.$store.commit("setVar",{name:"pqrContents",val:i}),this.$store.commit("setVar",{name:"infoFile",val:!0}),this.afterWASM(e,t,o)},e=>{this.$store.commit("disableTabs",{parametersTabDisabled:!0,existingFpocketOutputTabDisabled:!0,runningTabDisabled:!0,outputTabDisabled:!0,startOverTabDisabled:!1}),this.showFpocketWebError(e.message)},i.a()+"FpocketWeb/")})}))},onShowKeepProteinOnlyClick(e){let t=i.c(this.$store.state.pdbContents);this.$store.commit("setVar",{name:"pdbContents",val:t}),this.showKeepProteinOnlyLink=!1,e.preventDefault(),e.stopPropagation()},validate(e=!0){let t=this.$store.state.validation,o=!0;const i=Object.keys(t),r=i.length;let s=[];for(let e=0;e<r;e++){const r=i[e];if("output"===r)continue;!1===t[r]&&(o=!1,s.push(r))}return!1===o&&!0===e&&this.$store.commit("openModal",{title:"Invalid Parameters!",body:"<p>Please correct the following parameter(s) before continuing: <code>"+s.join(" ")+"</code></p>"}),this.$store.commit("setVar",{name:"fpocketParamsValidates",val:o}),o},afterWASM(t,o,i){this.$store.commit("disableTabs",{parametersTabDisabled:!0,existingFpocketOutputTabDisabled:!0,runningTabDisabled:!0,outputTabDisabled:!1,startOverTabDisabled:!1}),this.$store.commit("setVar",{name:"tabIdx",val:3}),this.$store.commit("setVar",{name:"stdOut",val:o}),this.$store.commit("setVar",{name:"outputContents",val:t}),""!==i&&this.showFpocketWebError(i),this.$store.commit("outputToData"),e("body").removeClass("waiting")},showFpocketWebError(e){this.$store.commit("openModal",{title:"FPocketWeb Error!",body:"<p>FPocketWeb returned the following error: <code>"+e+"</code></p>"})}};function l(){this.webAssemblyAvaialble=!0}function d(){Vue.component("fpocket-params",{template:s.a,props:{},data:()=>({currentPdbContents:"",triggerCatcher:!1,triggerController:!1,showFileInputs:!0,webAssemblyAvaialble:!0}),methods:n,mounted:l})}}).call(this,o("EVdn"))},NL52:function(e,t,o){"use strict";(function(e,i){o.d(t,"a",(function(){return l}));let r={pdbContents(){return this.$store.state.pdbContents},pocketsContents(){return JSON.parse(this.$store.state.pocketsContents)},pocketsToRender(){return this.$store.state.pocketsToRender},pocketsToRemove(){return this.$store.state.pocketsToRemove},pocketsColors(){return JSON.parse(this.$store.state.pocketsColors)},pocketsOpacity(){return JSON.parse(this.$store.state.pocketsOpacity)},fpocketParams(){return this.$store.state.fpocketParams},surfBtnVariant(){return!0===this.renderProteinSurface?void 0:"default"},allAtmBtnVariant(){return!0===this.renderProteinSticks?void 0:"default"},crystalBtnVariant(){return!0===this.renderCrystal?void 0:"default"},appropriatePdbLoaded(){return""!==this.$store.state.pdbContents}},s={modelAdded(t){!1!==this.appropriatePdbLoaded&&(e("body").addClass("waiting"),this.msg="Loading...",setTimeout(()=>{if(void 0===this.viewer){let t=e("#"+this.type+"-3dmol"),o={backgroundColor:"white"};this.viewer=i.createViewer(t,o)}let o,r=(e,t)=>{if("pockets"===e){const o=this.pocketsToRender,r=this.pocketsContents,s=this.pocketsColors,a=this.pocketsOpacity;for(let n=0;n<o.length;n++){const l=o[n],d=r[l];let c=this.viewer.addModel(d,"pdb",{keepH:!0});c.setStyle({},{});let p=this.viewer.addSurface(i.SurfaceType.MS,{color:s[l],opacity:a[l]},{model:c});this.pocketsSrfObj[l]=p.surfid,console.log("%cAdding: ","background: blue; color: white; font-size: 2em;",l),this[e+"Mol"][l]=c,t(c)}}else{let i=this[e+"Contents"],r=i;""!==r?this[e+"PdbOfLoaded"]!==r&&(console.log(this.type,"Adding "+e,r.length),this[e+"PdbOfLoaded"]=r,this.viewer.removeModel(this[e+"Mol"]),this.viewer.resize(),this[e+"Mol"]=this.viewer.addModel(r,"pdb",{keepH:!0}),o=this[e+"Mol"],t(o)):""!==i&&this.$store.commit("openModal",{title:"Invalid Input File!",body:"<p>The selected input file is not properly formatted. The molecular viewer has not been updated. Please select a properly formatted PDB file.</p>"})}};var s;-1!==["pdb"].indexOf(this.type)&&r("pdb",e=>{s=!0,this.surfaceObj=void 0,this.pdbAdded(e)});-1!==["pockets"].indexOf(this.type)&&(r("pockets",e=>{void 0!==e&&this.pocketsAdded(e)}),r("pdb",e=>{s=!0,this.viewer.removeAllSurfaces(),this.surfaceObj=void 0,this.pdbAdded(e)})),!0===s&&(this.viewer.render(),this.viewer.zoomTo({model:o},t),this.viewer.zoom(.8,t)),e("body").removeClass("waiting")},50))},pdbAdded(e){"pdb"===this.type&&this.makeAtomsClickable(e),this.showSurfaceAsAppropriate(),this.showSticksAsAppropriate()},pocketsAdded(e){this.viewer.render()},makeAtomsClickable(e){e.setClickable({},!0,e=>{});var t=e.selectedAtoms({});let o=t.length;for(var i=0;i<o;i++){t[i];this.viewer.setHoverable({},!0,e=>{let t=e.resn.trim()+e.resi.toString()+":"+e.atom.trim();e.chain=e.chain.trim(),""!==e.chain&&(t+=":"+e.chain),this.viewer.addLabel(t,{position:e,backgroundOpacity:.8})},e=>{this.viewer.removeAllLabels()})}},setFpocketParamIfUndefined(e,t){void 0===this.$store.state.fpocketParams[e]&&(this.$store.commit("setFpocketParam",{name:e,val:t}),this.$store.commit("setValidationParam",{name:e,val:!0}))},showSurfaceAsAppropriate(){void 0!==this.pdbMol&&(!0===this.renderProteinSurface?(void 0===this.surfaceObj&&(this.viewer.removeAllSurfaces(),this.surfaceObj=this.viewer.addSurface(i.SurfaceType.MS,{color:"white",opacity:.85},{model:this.pdbMol})),this.viewer.setSurfaceMaterialStyle(this.surfaceObj.surfid,{color:"white",opacity:.85}),this.viewer.render()):void 0!==this.surfaceObj&&(this.viewer.setSurfaceMaterialStyle(this.surfaceObj.surfid,{opacity:0}),this.viewer.render()))},showSticksAsAppropriate(){void 0!==this.pdbMol&&(!0===this.renderProteinSticks?(this.pdbMol.setStyle({},{stick:{radius:.15},cartoon:{color:"spectrum"}}),this.viewer.render()):(this.pdbMol.setStyle({},{}),this.viewer.render(),this.pdbMol.setStyle({},{cartoon:{color:"spectrum"}}),this.viewer.render()))},showCrystalAsAppropriate(){void 0!==this.crystalMol&&(!0===this.renderCrystal?(this.crystalMol.setStyle({},{stick:{radius:.3,color:"yellow"}}),this.viewer.render()):(this.crystalMol.setStyle({},{}),this.viewer.render()))},toggleSurface(){this.renderProteinSurface=!this.renderProteinSurface,this.showSurfaceAsAppropriate()},toggleSticks(){this.renderProteinSticks=!this.renderProteinSticks,this.showSticksAsAppropriate()},toggleCrystal(){this.renderCrystal=!this.renderCrystal,this.showCrystalAsAppropriate()}},a={pdbContents:function(e,t){let o=""===t?0:500;this.modelAdded(o)},pocketsColors:function(e,t){for(let o in t)if(t[o]!==e[o]&&void 0!==this.pocketsMol[o]){let t=this.pocketsSrfObj[o];this.viewer.setSurfaceMaterialStyle(t,{color:e[o]}),this.viewer.render(),window.viewer=this.viewer,window.pocketMol=this.pocketsMol}},pocketsOpacity:function(e,t){for(let o in t)if(t[o]!==e[o]&&void 0!==this.pocketsMol[o]){let t=this.pocketsSrfObj[o];this.viewer.setSurfaceMaterialStyle(t,{opacity:e[o]}),this.viewer.render(),window.viewer=this.viewer,window.pocketMol=this.pocketsMol}},pocketsToRemove:function(){if(0===Object.keys(this.pocketsSrfObj).length)return;const e=this.pocketsToRemove;for(let t=0;t<e.length;t++){const o=e[t];console.log("%cRemoving: ","background: red; color: white; font-size: 2em;",o),this.viewer.removeSurface(this.pocketsSrfObj[o]),this.viewer.render(),window.viewer=this.viewer,window.pocketMol=this.pocketsMol}},pocketsToRender:function(e,t){const o=this.pocketsToRender;let i=this.pocketsContents;for(let e=0;e<o.length;e++)if(!i[o[e]]){const t=window.store.state.pdbFileNameTrimmed,r=o[e],s=(new TextDecoder).decode(window.FS.readFile("/"+t+"_out/pockets/pocket"+o[e]+"_atm.pdb"));i[r]=s}this.$store.commit("setVar",{name:"pocketsContents",val:JSON.stringify(i)});this.modelAdded(500)},fpocketParams(e,t){this.type}};function n(){this.renderProteinSurface=this.proteinSurface}function l(){Vue.component("threedmol",{data(){return{viewer:void 0,surfaceObj:void 0,pocketsSrfObj:{},pdbMol:void 0,pocketsMol:{},pockets:void 0,crystalMol:void 0,pocketsPdbOfLoaded:"",renderProteinSurface:void 0,renderProteinSticks:!1,renderCrystal:!0,msg:"Use the file input above to select the "+this.type.toUpperCase()+" file."}},computed:r,template:'\n            <div class="container-3dmol" style="display:grid;">\n                <div\n                    :id="type + \'-3dmol\'"\n                    style="height: 400px; width: 100%; position: relative;">\n\n                    <b-card v-if="!appropriatePdbLoaded"\n                        class="text-center"\n                        :title="\'Missing \' + type.toUpperCase() + \' File\'"\n                        style="width: 100%; height: 100%;"\n                    >\n                        <b-card-text v-if="autoLoad">\n                            Loading...\n                        </b-card-text>\n                        <b-card-text v-else>\n                            {{msg}}\n                        </b-card-text>\n                    </b-card>\n                    <b-card v-else\n                        class="text-center"\n                        :title="\'Missing \' + type.toUpperCase()"\n                        style="width: 100%; height: 100%;"\n                    >\n                        Currently loading...\n                    </b-card>\n                </div>\n                <div v-if="type!==\'ligand\'" style="margin-top:-34px; padding-right:9px;" class="mr-1">\n                    \x3c!-- <form-button :variant="surfBtnVariant" @click.native="toggleSurface" :small="true">Surface</form-button> --\x3e\n                    <form-button :variant="allAtmBtnVariant" @click.native="toggleSticks" :small="true">All Atoms</form-button>\n                </div>\n            </div>\n        ',watch:a,props:{type:String,proteinSurface:{type:Boolean,default:!1},autoLoad:{type:Boolean,default:!1}},methods:s,mounted:n})}}).call(this,o("EVdn"),o("VS3o"))},"P+QH":function(e,t,o){"use strict";function i(){Vue.component("sub-section",{data:()=>({}),computed:{},template:'\n            <b-card :title="title" class="mb-4">\n                <b-card-text style="margin-top: 16px;">\n                    <slot></slot>\n                </b-card-text>\n            </b-card>\n        ',props:{title:String}})}o.d(t,"a",(function(){return i}))},UtaS:function(e,t,o){"use strict";o.d(t,"a",(function(){return s}));let i={items(){let e=this.$store.state.pdbOutputFrames;const t=e.length;let o=[],i=!1;for(let r=0;r<t;r++){const t=e[r][0];void 0!==t?o.push({mode:t[0],"affinity (kcal/mol)":t[1],"dist from rmsd L.B.":t[2],"dist from rmsd U.B.":t[3]}):(i=!0,o.push({mode:"---","affinity (kcal/mol)":"---","dist from rmsd L.B.":"---","dist from rmsd U.B.":"---"}))}return!0===i&&this.$store.commit("openModal",{title:"Output File Invalid!",body:"<p>The output PDBQT file does not appear to be properly formatted.</p>"}),o},fields:()=>[{key:"mode"},{key:"affinity (kcal/mol)"},{key:"dist from rmsd L.B."},{key:"dist from rmsd U.B."}]},r={rowClicked(e,t){let o=this.$store.state.pdbOutputFrames[t][1];this.$store.commit("setVar",{name:"dockedContents",val:o})}};function s(){Vue.component("results-table",{data:function(){return{}},computed:i,template:'\n            <b-table\n                striped hover small\n                :items="items"\n                :fields="fields"\n                @row-clicked="rowClicked">\n            </b-table>\n        ',props:{},methods:r})}},fPx5:function(e,t,o){"use strict";function i(){Vue.component("fpocket-running",{template:'\n            <div class="text-center">\n                <b-spinner style="width: 4rem; height: 4rem;" label="Working"></b-spinner>\n                <br /><br />\n                <p>Running FPocketWeb in your browser. Pocket searching may take some minutes.</p>\n                <p>This page may become unresponsive while performing calculations.\n                   Need to stop FPocketWeb but can\'t close this tab? Use your browser or\n                   operating-system Task Manager.</p>\n            </div>\n        ',props:{},computed:{},data:()=>({msg:"",msgIdx:0}),methods:{}})}o.d(t,"a",(function(){return i}))},hlD6:function(e,t){e.exports='<div> <b-form v-if="webAssemblyAvaialble"> <b-card class="mb-2 text-center" style="margin-bottom:1.4rem!important"> <b-card-text> Use this tab to setup a FPocketWeb job in your browser. Specify the input files and <i>fpocket</i> parameters below. </b-card-text> </b-card> <sub-section title="Input File" v-if="showFileInputs"> <mol-loader :multipleFiles="false" :saveMultipleFilesToDatabase="false" :fileLoaderPlugins="[\'pdb-id-input\', \'file-loader-input\', \'url-input\', \'alphafold-input\']" label="" description="Load a PDB file for pocket detection." extraDescription="" accept=".pdb" :required="true" :allowAtomDelete="true" :allowAtomExtract="false" @onError="onMolLoadError" @onFileReady="onFileReady"></mol-loader> <form-button @click.native="useExampleFpocketInputFiles" cls="float-right">Use Example File</form-button> </sub-section> <sub-section title="PDB Preview"> <form-group label="" id="input-group-pdb-3dmol" description=""> <div class="bv-example-row container-fluid"> <b-row> <b-col style="padding-left:0;padding-right:0"> <threedmol type="pdb"></threedmol> </b-col> </b-row> </div> </form-group> </sub-section> <sub-section title="Advanced Parameters"> <div role="tablist"> <b-card no-body class="mb-1"> <b-card-header header-tag="header" class="p-1" role="tab"> <b-button block href="#" v-b-toggle.accordion-2 variant="default">Optional output parameters </b-button> </b-card-header> <b-collapse id="accordion-2" role="tabpanel"> <b-card-body> <b-card class="mb-2 text-center" style="margin-bottom:1.4rem!important"> <b-card-text> Optional parameters to control FPocketWeb output </b-card-text> </b-card> <check-box label="Calculate VdW and Coulomb grids for each pocket" id="calculate_interaction_grids"></check-box> <check-box label="Write fpocket descriptors to the standard output" id="pocket_descr_stdout"></check-box> </b-card-body> </b-collapse> </b-card> <b-card no-body class="mb-1"> <b-card-header header-tag="header" class="p-1" role="tab"> <b-button block href="#" v-b-toggle.accordion-3 variant="default">Optional input parameters </b-button> </b-card-header> <b-collapse id="accordion-3" role="tabpanel"> <b-card-body> <b-card class="mb-2 text-center" style="margin-bottom:1.4rem!important"> <b-card-text> Advanced parameters that are best left unmodified </b-card-text> </b-card> <numeric-input label="model_number" id="model_number" description="Number of model to analyze."></numeric-input> </b-card-body> </b-collapse> </b-card> <b-card no-body class="mb-1"> <b-card-header header-tag="header" class="p-1" role="tab"> <b-button block href="#" v-b-toggle.accordion-4 variant="default">Optional pocket detection parameters </b-button> </b-card-header> <b-collapse id="accordion-4" role="tabpanel"> <b-card-body> <numeric-input label="min_alpha_size" id="min_alpha_size" description="Minimum radius of an alpha-sphere." placeholder="6.2" :min="0"> </numeric-input> <numeric-input label="max_alpha_size" id="max_alpha_size" description="Maximum radius of an alpha-sphere." placeholder="3.4"></numeric-input> <numeric-input label="clustering_distance" id="clustering_distance" description="Distance threshold for clustering algorithm." placeholder="2.4"> </numeric-input> <dropdown-input label="clustering_method" id="clustering_method" description="Clustering method for grouping voronoi vertices." placeholder="test" selected="s" :options="[\n                                    { text: \'s : single linkage clustering\', value: \'s\' },\n                                    { text: \'m : complete linkage clustering\', value: \'m\' },\n                                    { text: \'a : average linkage clustering\', value: \'a\' }\n                                  ]" :default="1"></dropdown-input> <dropdown-input label="clustering_measure" id="clustering_measure" description="Distance measure for clustering." placeholder="1" :options="[\n                                    { text: \'e : euclidean distance\', value: \'e\' },\n                                    { text: \'b : Manhattan distance\', value: \'b\' }\n                                ]" :default="0" selected="e"></dropdown-input> <numeric-input label="min_spheres_per_pocket" id="min_spheres_per_pocket" description="Minimum number of a-sphere per pocket." placeholder="15" :default="15"> </numeric-input> <numeric-input label="ratio_apol_spheres_pocket" id="ratio_apol_spheres_pocket" description="Minimum proportion of apolar sphere in a pocket (remove otherwise)" placeholder="0.0" :default="0.0"></numeric-input> <numeric-input label="number_apol_asph_pocket" id="number_apol_asph_pocket" description="Minimum number of apolar neighbor for an a-sphere to be considered as apolar." placeholder="3" :default="3"></numeric-input> <numeric-input label="iterations_volume_mc" id="iterations_volume_mc" description="Number of Monte-Carlo iterations for calculating each pocket volume." placeholder="300" :default="300"></numeric-input> </b-card-body> </b-collapse> </b-card> </div> </sub-section> <fpocket-commandline></fpocket-commandline> <form-button @click.native="onSubmitClick" variant="primary" cls="float-right mb-4" :disabled="$store.state.pdbContents === \'\'">Start FPocketWeb </form-button> </b-form> <div v-else> <p> Unfortunately, your browser does not support WebAssembly. Please <a href="https://developer.mozilla.org/en-US/docs/WebAssembly#Browser_compatibility" target="_blank">switch to a browser that does</a> (e.g., Google Chrome). </p> <p> Note that you can still use the "Existing Fpocket Output" option (see menu on the left) even without WebAssembly. </p> </div> </div> '},og8d:function(e,t,o){"use strict";(function(e){o.d(t,"a",(function(){return r}));let i={onSubmitClick(){e("body").addClass("waiting"),location.reload()}};function r(){Vue.component("start-over",{template:'\n            <div class="text-center">\n                <b-alert show variant="warning">If you start over, your existing data will be deleted. Proceed only if you have already saved your data using the "Download" button(s) in the "Output" tab.</b-alert>\n                <form-button @click.native="onSubmitClick" variant="primary">Start Over</form-button>\n            </div>\n        ',props:{},computed:{},data:()=>({}),methods:i})}}).call(this,o("EVdn"))},ss7V:function(e,t,o){"use strict";o.d(t,"a",(function(){return l}));var i=o("kXk/"),r=o("xLQT"),s=o.n(r);let a={stdOut(){return this.$store.state.stdOut},outputContents(){return this.$store.state.outputContents},time(){return this.$store.state.time.toString()}},n={stdOutDownload(){var e=new Blob([this.stdOut],{type:"text/plain;charset=utf-8"});Object(i.d)(e,"stdout.txt")},fpocketOutputContentsDownload(){var e=new Blob([this.outputContents],{type:"text/plain;charset=utf-8"});Object(i.d)(e,"protein_out.pdb")},fpocketOutputZipDownload(){o.e(0).then(o.t.bind(null,"xOOu",7)).then(e=>{let t=new e.default;const o=this.$store.state.pdbFileNameTrimmed;t.folder("/"+o+"_out"),t.folder("/"+o+"_out/pockets");let r=window.FS.readdir("/"+o+"_out"),s=window.FS.readdir("/"+o+"_out/pockets");for(let e=3;e<r.length;e++)t.file("/"+o+"_out/"+r[e],window.FS.readFile("/"+o+"_out/"+r[e]));for(let e=2;e<s.length;e++)t.file("/"+o+"_out/pockets/"+s[e],window.FS.readFile("/"+o+"_out/pockets/"+s[e]));t.generateAsync({type:"blob"}).then((function(e){Object(i.d)(e,o+"_out.zip")}))})}};function l(){Vue.component("fpocket-output",{template:s.a,props:{},computed:a,data:()=>({}),methods:n})}},xLQT:function(e,t){e.exports='<div> <sub-section title="Visualization"> <form-group label="" id="input-group-receptor-3dmol" description=""> <threedmol :autoLoad="true" type="pockets" :proteinSurface="false"></threedmol> </form-group> <p class="text-center mb-0">Execution time: {{time}} seconds</p> </sub-section> <sub-section title="Detected Pockets"> <info-table></info-table> </sub-section> <sub-section title="Output Files"> <form-group label="All Output" id="input-group-zip-download" description="Download all FPocketWeb output as a ZIP file, including the information displayed above." :labelToLeft="false"> <form-button :small="true" @click.native="fpocketOutputZipDownload">Download</form-button> </form-group> <form-group label="Output PDB File" id="input-group-standard-output" description="FPocketWeb\'s output file with the pocket positions." :labelToLeft="false"> <b-form-textarea readonly="readonly" id="textarea" v-model="outputContents" placeholder="Standard Output" rows="3" max-rows="6" style="white-space:pre" class="text-monospace" size="sm"></b-form-textarea> <form-button :small="true" @click.native="fpocketOutputContentsDownload">Download</form-button> </form-group> </sub-section> <fpocket-commandline></fpocket-commandline> </div>'}}]);